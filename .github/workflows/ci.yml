name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

env:
  GO_VERSION: "1.24"

jobs:
  test:
    name: Integration Tests Job
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Create environment file
        run: |
          cat > deploy/docker/.env << EOF
          ETH_HTTP_URL=${{ secrets.ETH_HTTP_URL }}
          ETH_WS_URL=${{ secrets.ETH_WS_URL }}
          OFFICIAL_ACCOUNT_PRIVATE_KEY=${{ secrets.OFFICIAL_ACCOUNT_PRIVATE_KEY }}
          EOF

      - name: Run integration tests
        run: |
          echo "=== Starting Docker events monitoring in background ==="
          docker events > docker_events.log 2>&1 &
          EVENTS_PID=$!

          echo "=== Starting services with real-time output (non-detached) ==="
          timeout 120 docker compose -f deploy/docker/docker-compose.local.yml up --abort-on-container-exit || true

          echo "=== Kill events monitoring ==="
          kill $EVENTS_PID 2>/dev/null || true

          echo "=== Container startup events ==="
          cat docker_events.log | grep -E "(container|image)" || echo "No container events found"

          echo "=== All containers (including failed/exited) ==="
          docker ps -a

          echo "=== Get logs from ALL services (including failed ones) ==="
          docker compose -f deploy/docker/docker-compose.local.yml logs --no-color || true

          echo "=== Specific logs for failed services ==="
          echo "--- dstack-simulator logs ---"
          docker compose -f deploy/docker/docker-compose.local.yml logs dstack-simulator --no-color || echo "No dstack-simulator container to get logs from"

          echo "--- delong logs ---"
          docker compose -f deploy/docker/docker-compose.local.yml logs delong --no-color || echo "No delong container to get logs from"

          echo "=== Container exit codes ==="
          docker ps -a --format "table {{.Names}}\t{{.Status}}\t{{.Command}}" | grep -E "(dstack|delong)" || echo "No dstack/delong containers found"

          echo "=== Cleanup ==="
          docker compose -f deploy/docker/docker-compose.local.yml down -v || trues
